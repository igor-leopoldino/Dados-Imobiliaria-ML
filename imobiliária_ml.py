# -*- coding: utf-8 -*-
"""Projeto_Imobiliária_Pd_ML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MzqarByxiuiqp6cDQT3XUWqTJgEouaxE

# Importando a base de dados
"""

import pandas as pd

url = 'https://raw.githubusercontent.com/alura-cursos/pandas-conhecendo-a-biblioteca/main/base-de-dados/aluguel.csv'

dados = pd.read_csv(url, delimiter=';')

dados_iniciais = dados.head(10)

dados_finais = dados.tail(10)

"""# Caracteristicas gerais dos dados"""

dados.shape

dados.columns

dados.info()

dados['Tipo']

dados[['Quartos', 'Valor']]

"""# Análise exploratória de dados

## Qual o valor médio de aluguel por tipo de imóvel?
"""

dados.head()

dados['Valor'].mean()

dados.groupby('Tipo').mean(numeric_only=True)

dados.groupby('Tipo')['Valor'].mean()

dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor')

df_preco_tipo = dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor')

df_preco_tipo.plot(kind='barh', figsize=(14,10),color='orange')

"""## Removendo os imóveis comerciais"""

dados.Tipo.unique()

imoveis_comerciais = ['Conjunto Comercial/Sala', 'Prédio Inteiro', 'Loja/Salão', 'Galpão/Depósito/Armazém', 'Casa Comecial', 'Terreno Padrão', 'Loja Shopping/ Ct Comercial',
                      'Loteamento/Condomínio', 'Sítio', 'Pousada/Chalé', 'Studio', 'Hotel', 'Indústria', 'Box/Garagem']

dados.query('@imoveis_comerciais in Tipo')

dados.query('@imoveis_comerciais not in Tipo')

df = dados.query('@imoveis_comerciais not in Tipo')
df.head()

df.Tipo.unique()

df_preco_tipo = df.groupby('Tipo')[['Valor']].mean().sort_values('Valor')

df_preco_tipo.plot(kind='barh', figsize=(10,8),color='orange')

"""## Qual o percentual de cada tipo de imóvel na nossa base de dados?"""

df.Tipo.unique()

df.Tipo.value_counts(normalize=True)

df.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo')

df_percentual_tipo = df.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo')

df_percentual_tipo.plot(kind='bar',figsize=(10,8),color='orange',xlabel='Tipos',ylabel='Percentual')

"""## Selecionando apenas os imóveis do tipo apartamento"""

df.query('Tipo == "Apartamento"')

df = df.query('Tipo == "Apartamento"')

df['Quartos'].mean()

df_media_quartos = df['Quartos'].mean()

len(df['Bairro'].unique())

df.Bairro.unique()

df.groupby('Bairro')[['Valor']].mean().sort_values('Valor',ascending=False)

df__bairros_aluguel = df.groupby('Bairro')[['Valor']].mean().sort_values('Valor',ascending=False)

df__bairros_aluguel_elevado = df__bairros_aluguel.head()

df__bairros_aluguel_elevado.plot(kind='barh',figsize=(10,8),color='orange',xlabel='Média dos Aluguéis',ylabel='Bairro')

"""# Tratando e filtrando os dados

## Lidando com dados nulos
"""

df.isnull()

df.isnull().sum()

df.fillna(0)

df = df.fillna(0)

df.isnull().sum()

"""## Removendo registros"""

df.query('Valor == 0 | Condominio == 0')

registros_a_remover = df.query('Valor == 0 | Condominio == 0').index

df.drop(registros_a_remover, axis=0, inplace=True)

df.query('Valor == 0 | Condominio == 0')

df.head()

df.Tipo.unique()

df.drop('Tipo', axis=1, inplace=True)

df.head()

"""# Filtros

## 1. Apartamentos que possuem 1 quarto e aluguel menor que 1200
"""

df['Quartos'] == 1

selecao_quartos = df['Quartos'] == 1
df[selecao_quartos]

df['Valor'] < 1200

selecao_aluguel = df['Valor'] < 1200

df[selecao_aluguel]

selecao_final = (selecao_aluguel) & (selecao_quartos)

df[selecao_final]

df_1 = df[selecao_final]

selecao_final_2 = (df['Quartos'] >= 2) & (df['Valor'] < 3000) & (df['Area'] > 70)

df[selecao_final_2]

df_2 = df[selecao_final_2]

selecao_final_3 = (df['Area'] > 80) | (df['Valor'] < 4000)

df[selecao_final_3]

df_3 = df[selecao_final_3]

"""# Salvando os dados"""

df.to_csv('dados_apartamentos.csv')

pd.read_csv('dados_apartamentos.csv')

df.to_csv('dados_apartamentos.csv',index=False)

pd.read_csv('dados_apartamentos.csv')

df.to_csv('dados_apartamentos.csv',index=False, sep=';')

pd.read_csv('dados_apartamentos.csv',sep=';')

df_1.to_csv('dados_1.csv', index=False)

pd.read_csv('dados_1.csv', sep=',')

df_2.to_csv('dados_2.csv', index=False)

pd.read_csv('dados_2.csv', sep=',')

df_3.to_csv('dados_3.csv', index=False)

pd.read_csv('dados_3.csv')

